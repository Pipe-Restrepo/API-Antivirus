// <auto-generated />
using Api_Antivirus.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Api_Antivirus.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250218235717_AddingJwt")]
    partial class AddingJwt
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Api_Antivirus.Models.bootcamp_topics", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("bootcamp_id")
                        .HasColumnType("integer");

                    b.Property<int>("topic_id")
                        .HasColumnType("integer");

                    b.HasKey("id")
                        .HasName("bootcamp_topics_pkey");

                    b.HasIndex("bootcamp_id");

                    b.HasIndex("topic_id");

                    b.ToTable("bootcamp_topics");
                });

            modelBuilder.Entity("Api_Antivirus.Models.bootcamps", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("costs")
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("information")
                        .HasColumnType("text");

                    b.Property<int?>("institution_id")
                        .HasColumnType("integer");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("id")
                        .HasName("bootcamps_pkey");

                    b.HasIndex("institution_id");

                    b.ToTable("bootcamps");
                });

            modelBuilder.Entity("Api_Antivirus.Models.categories", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("id")
                        .HasName("categories_pkey");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("Api_Antivirus.Models.institutions", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("ubication")
                        .HasColumnType("text");

                    b.Property<string>("url_admision")
                        .HasColumnType("text");

                    b.Property<string>("url_bienestar")
                        .HasColumnType("text");

                    b.Property<string>("url_generalidades")
                        .HasColumnType("text");

                    b.Property<string>("url_oferta_academica")
                        .HasColumnType("text");

                    b.HasKey("id")
                        .HasName("institutions_pkey");

                    b.ToTable("institutions");
                });

            modelBuilder.Entity("Api_Antivirus.Models.opportunities", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("adicional_dates")
                        .HasColumnType("text");

                    b.Property<int?>("category_id")
                        .HasColumnType("integer");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("guide")
                        .HasColumnType("text");

                    b.Property<int?>("institution_id")
                        .HasColumnType("integer");

                    b.Property<string>("manager")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("modality")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("observation")
                        .HasColumnType("text");

                    b.Property<string>("requires")
                        .HasColumnType("text");

                    b.Property<string>("service_channels")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("id")
                        .HasName("opportunities_pkey");

                    b.HasIndex("category_id");

                    b.HasIndex("institution_id");

                    b.ToTable("opportunities");
                });

            modelBuilder.Entity("Api_Antivirus.Models.topics", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("id")
                        .HasName("topics_pkey");

                    b.ToTable("topics");
                });

            modelBuilder.Entity("Api_Antivirus.Models.user_opportunities", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("opportunity_id")
                        .HasColumnType("integer");

                    b.Property<int>("user_id")
                        .HasColumnType("integer");

                    b.HasKey("id")
                        .HasName("user_opportunities_pkey");

                    b.HasIndex("opportunity_id");

                    b.HasIndex("user_id");

                    b.ToTable("user_opportunities");
                });

            modelBuilder.Entity("Api_Antivirus.Models.users", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("rol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("id")
                        .HasName("users_pkey");

                    b.HasIndex(new[] { "email" }, "users_email_key")
                        .IsUnique();

                    b.ToTable("users");
                });

            modelBuilder.Entity("Api_Antivirus.Models.bootcamp_topics", b =>
                {
                    b.HasOne("Api_Antivirus.Models.bootcamps", "bootcamp")
                        .WithMany("bootcamp_topics")
                        .HasForeignKey("bootcamp_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("bootcamp_topics_bootcamp_id_fkey");

                    b.HasOne("Api_Antivirus.Models.topics", "topic")
                        .WithMany("bootcamp_topics")
                        .HasForeignKey("topic_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("bootcamp_topics_topic_id_fkey");

                    b.Navigation("bootcamp");

                    b.Navigation("topic");
                });

            modelBuilder.Entity("Api_Antivirus.Models.bootcamps", b =>
                {
                    b.HasOne("Api_Antivirus.Models.institutions", "institution")
                        .WithMany("bootcamps")
                        .HasForeignKey("institution_id")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("bootcamps_institution_id_fkey");

                    b.Navigation("institution");
                });

            modelBuilder.Entity("Api_Antivirus.Models.opportunities", b =>
                {
                    b.HasOne("Api_Antivirus.Models.categories", "category")
                        .WithMany("opportunities")
                        .HasForeignKey("category_id")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("opportunities_category_id_fkey");

                    b.HasOne("Api_Antivirus.Models.institutions", "institution")
                        .WithMany("opportunities")
                        .HasForeignKey("institution_id")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("opportunities_institution_id_fkey");

                    b.Navigation("category");

                    b.Navigation("institution");
                });

            modelBuilder.Entity("Api_Antivirus.Models.user_opportunities", b =>
                {
                    b.HasOne("Api_Antivirus.Models.opportunities", "opportunity")
                        .WithMany("user_opportunities")
                        .HasForeignKey("opportunity_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("user_opportunities_opportunity_id_fkey");

                    b.HasOne("Api_Antivirus.Models.users", "user")
                        .WithMany("user_opportunities")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("user_opportunities_user_id_fkey");

                    b.Navigation("opportunity");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Api_Antivirus.Models.bootcamps", b =>
                {
                    b.Navigation("bootcamp_topics");
                });

            modelBuilder.Entity("Api_Antivirus.Models.categories", b =>
                {
                    b.Navigation("opportunities");
                });

            modelBuilder.Entity("Api_Antivirus.Models.institutions", b =>
                {
                    b.Navigation("bootcamps");

                    b.Navigation("opportunities");
                });

            modelBuilder.Entity("Api_Antivirus.Models.opportunities", b =>
                {
                    b.Navigation("user_opportunities");
                });

            modelBuilder.Entity("Api_Antivirus.Models.topics", b =>
                {
                    b.Navigation("bootcamp_topics");
                });

            modelBuilder.Entity("Api_Antivirus.Models.users", b =>
                {
                    b.Navigation("user_opportunities");
                });
#pragma warning restore 612, 618
        }
    }
}
